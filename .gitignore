################################################################################
# 此 .gitignore 文件已由 Microsoft(R) Visual Studio 自动创建。
################################################################################

/release
/debug
/clipboard/x64
/.vs/clipboard
/.qmake.stash
/clipboard.qtvscr
/clipboard_resource.aps
/clipboard_resource.rc
/ui_mainwindow.h
/.vs
*.user
/build/
## 忽略Visual Studio临时文件、生成结果和
## 由流行的Visual Studio加载项生成的文件。
##
## 从获取最新消息 https://github.com/github/gitignore/blob/main/VisualStudio.gitignore

# 用户特定文件
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# 用户特定文件 (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono自动生成的文件
mono_crash.*

# 生成结果
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Ww][Ii][Nn]32/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
[Ll]ogs/

# Visual Studio 2015/2017缓存/选项目录
.vs/
# 如果您有在wwwroot中创建项目静态文件的任务，请取消注释
# wwwroot/

# Visual Studio 2017自动生成的文件
Generated\ Files/

# MSTest测试结果
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# ATL项目的生成结果
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# 基准结果
BenchmarkDotNet.Artifacts/

# .NET核心
project.lock.json
project.fragment.lock.json
artifacts/

# ASP.NET 脚手架
ScaffoldingReadMe.txt

# StyleCop
StyleCopReport.xml

# 由Visual Studio生成的文件
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.tlog
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah 测试文件
_Chutzpah*

# Visual C++ 缓存文件
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio 探查器
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio 跟踪文件
*.e2e

# TFS 2012本地工作区
$tf/

# 指导自动化工具包
*.gpState

# ReSharper是一个.NET编码插件
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# TeamCity是一个内置插件
_TeamCity*

# DotCoverr是一个代码覆盖工具
*.dotCover

# AxoCover是一个代码覆盖工具
.axoCover/*
!.axoCover/settings.json

# Coverlet是一个免费的跨平台代码覆盖工具
coverage*.json
coverage*.xml
coverage*.info

# Visual Studio代码覆盖率结果
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web工作台（sass）
.sass-cache/

# Installshield 输出文件夹
[Ee]xpress/

# DocProject是一个文档生成器插件
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# 单击一次目录
publish/

# 发布Web输出
*.[Pp]ublish.xml
*.azurePubxml
# 注意：如果您想签入web部署设置，请在下一行注释，
# 但数据库连接字符串（具有潜在密码）将不加密
*.pubxml
*.publishproj

# Microsoft Azure Web App发布设置。如果你想的话，评论下一行
# 签入Azure Web App发布设置，但包含敏感信息
# 在这些脚本中将是未加密的
PublishScripts/

# NuGet 包
*.nupkg
# NuGet 符号包
*.snupkg
# 由于包还原，可以忽略包文件夹
**/[Pp]ackages/*
# build/除外，后者用作MSBuild目标
!**/[Pp]ackages/build/
# 必要时取消注释，但通常会在需要时重新生成
#!**/[Pp]ackages/repositories.config
# NuGetv3的project.json文件会产生更多可忽略的文件
*.nuget.props
*.nuget.targets

# Microsoft Azure 生成输出
csx/
*.build.csdef

# Microsoft Azure 仿真器
ecf/
rcf/

# Windows应用商店应用程序包目录和文件
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio缓存文件
# 以.cache结尾的文件可以忽略
*.[Cc]ache
# 但要跟踪以.cache结尾的目录
!?*.[Cc]ache/

# 其他
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# 包含强名称文件可能会带来安全风险
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# 由于存在多个工作流，请取消注释下一行以忽略bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight 项目
Generated_Code/

# 通过转换旧项目文件备份和报告文件
# 到更新的Visual Studio版本。不需要备份文件，
# 因为我们有git；-）
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server 文件
*.mdf
*.ldf
*.ndf

# 商业智能项目
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc插件设置文件
*.GhostDoc.xml

# Node.js Visual Studio 工具
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 生成日志
*.plg

# Visual Studio 6 工作区选项文件
*.opt

# Visual Studio 6 自动生成的工作区文件（包含打开的文件等）
*.vbw

# Visual Studio 6 自动生成的项目文件（包含打开的文件等）
*.vbp

# Visual Studio 6 工作区和项目文件（包含要包含在项目中的文件的工作项目文件）
*.dsw
*.dsp

# Visual Studio 6 技术文件
*.ncb
*.aps

# Visual Studio LightSwitch 生成输出
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket 依赖关系管理器
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush 个人设置
.cr/personal

# 用于Visual Studio的Python工具（PTVS）
__pycache__/
*.pyc

# Cake - 如果您正在使用，请取消注释
# tools/**
# !tools/packages.config

# 选项卡工作室
*.tss

# Telerik的JustLock配置文件
*.jmconfig

# BizTalk生成输出
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI分析结果
OpenCover/

# Azure流分析本地运行输出
ASALocalRun/

# MSBuild二进制和结构化日志
*.binlog

# NVidia Nsight GPU调试器配置文件
*.nvuser

# MFractors（Xamarin生产力工具）工作文件夹
.mfractor/

# Visual Studio的本地历史记录
.localhistory/

# Visual Studio历史记录（VSHistory）文件
.vshistory/

# BeatPulse健康检查临时数据库
healthchecksdb

# Visual Studio 2017中包引用转换工具的备份文件夹
MigrationBackup/

# Ionide（跨平台F#VS代码工具）工作文件夹
.ionide/

# Fody-自动生成的XML模式
FodyWeavers.xsd

# 用于使用多种工具的VS代码文件
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# Visual Studio代码的本地历史记录
.history/

# 生成输出中的Windows Installer文件
*.cab
*.msi
*.msix
*.msm
*.msp

# JetBrains Rider
*.sln.iml


